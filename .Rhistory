contribution_plot = contribution
contribution_plot[which(contribution_plot >= 1)] = 1
melt_con = melt(contribution_plot)
ggplot(melt_con, aes(x = Var2, y = Var1)) +
geom_raster(aes(fill=value)) +
scale_fill_gradient(low="skyblue", high="dodgerblue4") +
labs(x="Sentences", y="Character", title="Data Matrix for Nugative Sentiment Contribution (After Kernel Smoothing)") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11)) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
start_chap = 1
end_chap = 61
range_invest = ends[c((start_chap),(end_chap+1)),2] #
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
start_chap = 1
end_chap = 20
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[1], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
?cv.glmnet
?alpha
?cv.glmnet.alpha
?cv.glmnet
?glm
?glmnet
library(glmnet)
# ridge regression
start_chap = 1
end_chap = 20
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[2], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
sum(contribution >= 10) # 20
sum(contribution >= 300) # 2
sum(contribution >= 1) # 20
contribution_plot = duplicate(contribution, shallow = FALSE)
?duplicated
?duplicate
library(rlang)
contribution_plot = duplicate(contribution, shallow = FALSE)
contribution = matrix(0L, nrow = dim(char[,-1])[1], ncol = dim(char[,-1])[2])
for (i in 1:dim(char)[1]){
char_app = which(char[i,-1] == 1)
contribution[i, char_app] = sapply(char_app, kernel) # on this index apply the kernel
}
contribution_plot = duplicate(contribution, shallow = FALSE)
contribution_plot[which(contribution_plot >= 1)] = 1
melt_con = melt(contribution_plot)
ggplot(melt_con, aes(x = Var2, y = Var1)) +
geom_raster(aes(fill=value)) +
scale_fill_gradient(low="skyblue", high="dodgerblue4") +
labs(x="Sentences", y="Character", title="Data Matrix for Nugative Sentiment Contribution (After Kernel Smoothing)") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11)) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
# contribution 14*5584
(contribution >= 10)
sum(contribution >= 10) # 20
sum(contribution >= 300) # 2
sum(contribution >= 1) # 20
sum(contribution >= 300) # 2
sum(contribution_plot >= 300) # 2
sum(contribution_plot >= 1) # 2
contribution_plot = duplicate(contribution, shallow = FALSE)
contribution_plot[which(contribution_plot >= 0.5)] = 0.5
melt_con = melt(contribution_plot)
ggplot(melt_con, aes(x = Var2, y = Var1)) +
geom_raster(aes(fill=value)) +
scale_fill_gradient(low="skyblue", high="dodgerblue4") +
labs(x="Sentences", y="Character", title="Data Matrix for Nugative Sentiment Contribution (After Kernel Smoothing)") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11)) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
sum(contribution >= 10) # 20
sum(contribution >= 300) # 2
sum(contribution >= 1) # 20
# ridge regression
start_chap = 1
end_chap = 20
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[2], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
# ridge regression
start_chap = 1
end_chap = 20
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[2], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[2], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
# ridge regression
start_chap = 1
end_chap = 61
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[2], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[2], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
# ridge regression
start_chap = 1
end_chap = 60
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[2], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[2], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
# ridge regression
start_chap = 1
end_chap = 60
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[1], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
# ridge regression
start_chap = 1
end_chap = 10
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[1], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
char[,1]
char[,1]
beta
View(df)
# ridge regression
start_chap = 1
end_chap = 61
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[1], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
# ridge regression
start_chap = 1
end_chap = 20
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[1], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
?lm
?glm
fit2 = glm.fit(X,y)
fit2$coefficients
fit2$coefficients[-1]
df <- data.frame(
char = char[,1],
be = beta[-1]
)
df <- data.frame(
char = char[,1],
be = beta
)
View(fit2)
summary(fit2)
dim(X)
fit2 = glm.fit(X,y)
fit2$coefficients
df <- data.frame(
char = char[,1],
be = fit2$coefficients
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
# ridge regression
start_chap = 1
end_chap = 61
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
fit2 = glm.fit(X,y)
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[1], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
optimal_lambda
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = fit2$coefficients
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
senti[,1]
senti_invest = senti[4,-1] # investiage the positive sentiment contribution
contribution = matrix(0L, nrow = dim(char[,-1])[1], ncol = dim(char[,-1])[2])
for (i in 1:dim(char)[1]){
char_app = which(char[i,-1] == 1)
contribution[i, char_app] = sapply(char_app, kernel) # on this index apply the kernel
}
contribution_plot = duplicate(contribution, shallow = FALSE)
contribution_plot[which(contribution_plot >= 1)] = 1
melt_con = melt(contribution_plot)
ggplot(melt_con, aes(x = Var2, y = Var1)) +
geom_raster(aes(fill=value)) +
scale_fill_gradient(low="skyblue", high="dodgerblue4") +
labs(x="Sentences", y="Character", title="Data Matrix for Nugative Sentiment Contribution (After Kernel Smoothing)") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11)) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
sum(contribution >= 10) # 20
sum(contribution >= 300) # 2
sum(contribution >= 1) # 20
# ridge regression
start_chap = 1
end_chap = 20
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
fit2 = glm.fit(X,y)
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[1], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = fit2$coefficients
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to positive sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
senti_invest = senti[2,-1] # investiage the positive sentiment contribution
contribution = matrix(0L, nrow = dim(char[,-1])[1], ncol = dim(char[,-1])[2])
for (i in 1:dim(char)[1]){
char_app = which(char[i,-1] == 1)
contribution[i, char_app] = sapply(char_app, kernel) # on this index apply the kernel
}
contribution[contribution >= 5] = 5
# ridge regression
start_chap = 1
end_chap = 20
range_invest = ends[c((start_chap),(end_chap+1)),2] # FROM where to where
y = t(data.matrix(senti_invest))[range_invest[1]:range_invest[2]]
X = t(contribution[,range_invest[1]:range_invest[2]])
fit2 = glm.fit(X,y)
lambdas <- 10^seq(2, -3, by = -.1)
alpha_choice = c(0,1)
cv_ridge <- cv.glmnet(X, y, alpha = alpha_choice[1], lambda = lambdas)
optimal_lambda <- cv_ridge$lambda.min
ridge_reg = glmnet(X,y, alpha = alpha_choice[1], family = 'gaussian', lambda = optimal_lambda)
beta = as.vector(ridge_reg[["beta"]])
beta = beta/norm(beta, type='2')
df <- data.frame(
char = char[,1],
be = fit2$coefficients
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to positive sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
View(df)
df <- data.frame(
char = char[,1],
be = beta
)
df %>%
ggplot(aes(x=char, y=be))+
geom_col()+
scale_x_discrete(guide = guide_axis(n.dodge=3))+
labs(title="Contribution to negative sentiment", x = "Character", y="value")+
theme_bw() + theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11))
